memberSearchIndex = [{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, E[])","u":"assertContains(E,E[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, E[], String)","u":"assertContains(E,E[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, List<E>)","u":"assertContains(E,java.util.List)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, List<E>, String)","u":"assertContains(E,java.util.List,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, Set<E>)","u":"assertContains(E,java.util.Set)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, Set<E>, String)","u":"assertContains(E,java.util.Set,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(E[], E[])","u":"assertContainsSame(E[],E[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(E[], E[], String)","u":"assertContainsSame(E[],E[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(List<E>, List<E>)","u":"assertContainsSame(java.util.List,java.util.List)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(List<E>, List<E>, String)","u":"assertContainsSame(java.util.List,java.util.List,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double)","u":"assertDifferent(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, double)","u":"assertDifferent(double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, double, String)","u":"assertDifferent(double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, String)","u":"assertDifferent(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(long, long)","u":"assertDifferent(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(long, long, String)","u":"assertDifferent(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(Object, Object)","u":"assertDifferent(java.lang.Object,java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(Object, Object, String)","u":"assertDifferent(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDoesNotThrow(Procedure)","u":"assertDoesNotThrow(org.testframe.api.Procedure)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDoesNotThrow(Procedure, String)","u":"assertDoesNotThrow(org.testframe.api.Procedure,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double)","u":"assertEquals(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, double)","u":"assertEquals(double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, double, String)","u":"assertEquals(double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, String)","u":"assertEquals(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[])","u":"assertEquals(double[],double[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], double)","u":"assertEquals(double[],double[],double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], double, String)","u":"assertEquals(double[],double[],double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], String)","u":"assertEquals(double[],double[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int, int)","u":"assertEquals(int,int)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int, int, String)","u":"assertEquals(int,int,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int[], int[])","u":"assertEquals(int[],int[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int[], int[], String)","u":"assertEquals(int[],int[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(long, long)","u":"assertEquals(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(long, long, String)","u":"assertEquals(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object, Object)","u":"assertEquals(java.lang.Object,java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object, Object, String)","u":"assertEquals(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object[], Object[])","u":"assertEquals(java.lang.Object[],java.lang.Object[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object[], Object[], String)","u":"assertEquals(java.lang.Object[],java.lang.Object[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"Asserters()","u":"%3Cinit%3E()"},{"p":"org.testframe.api","c":"AssertersTest","l":"AssertersTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(double, double)","u":"assertMaximum(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(double, double, String)","u":"assertMaximum(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(long, long)","u":"assertMaximum(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(long, long, String)","u":"assertMaximum(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(T, T)","u":"assertMaximum(T,T)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(T, T, String)","u":"assertMaximum(T,T,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(double, double)","u":"assertMinimum(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(double, double, String)","u":"assertMinimum(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(long, long)","u":"assertMinimum(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(long, long, String)","u":"assertMinimum(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(T, T)","u":"assertMinimum(T,T)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(T, T, String)","u":"assertMinimum(T,T,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNaN(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNaN(double, String)","u":"assertNaN(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(double, String)","u":"assertNegative(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(long, String)","u":"assertNegative(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNaN(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNaN(double, String)","u":"assertNotNaN(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(double, String)","u":"assertNotNegative(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(long, String)","u":"assertNotNegative(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(double, String)","u":"assertNotPositive(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(long, String)","u":"assertNotPositive(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNull(Object)","u":"assertNull(java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNull(Object, String)","u":"assertNull(java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(double, String)","u":"assertPositive(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(long, String)","u":"assertPositive(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPrintOut(Predicate<String>, Procedure, String)","u":"assertPrintOut(java.util.function.Predicate,org.testframe.api.Procedure,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertThrows(Procedure, Class<E>)","u":"assertThrows(org.testframe.api.Procedure,java.lang.Class)"},{"p":"org.testframe.api","c":"Asserters","l":"assertThrows(Procedure, Class<E>, String)","u":"assertThrows(org.testframe.api.Procedure,java.lang.Class,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(double, String)","u":"assertZero(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(long, String)","u":"assertZero(long,java.lang.String)"},{"p":"org.testframe.api.text","c":"PlainTextProcessor","l":"collapseWhitespace(String)","u":"collapseWhitespace(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultComparator","l":"compare(TestResult, TestResult)","u":"compare(org.testframe.engine.TestResult,org.testframe.engine.TestResult)"},{"p":"org.testframe.api","c":"Asserters","l":"DEFAULT_TEST_DELTA"},{"p":"org.testframe.api.text","c":"PlainTextProcessor","l":"equalsWithWhitespaceCollapsed(String, String)","u":"equalsWithWhitespaceCollapsed(java.lang.String,java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"ERROR"},{"p":"org.testframe.api","c":"Procedure","l":"execute()"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"ExpandedRandom()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"expectedLength"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"expectedMaximum"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"expectedMinimum"},{"p":"org.testframe.api.random","c":"ExternalRandomnessProvider","l":"ExternalRandomnessProvider()","u":"%3Cinit%3E()"},{"p":"org.testframe.api","c":"Asserters","l":"fail(String)","u":"fail(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"FAILED"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProvider","l":"FallbackRandomnessProvider(ExternalRandomnessProvider, Logger)","u":"%3Cinit%3E(org.testframe.api.random.ExternalRandomnessProvider,java.util.logging.Logger)"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProviderTest","l":"FallbackRandomnessProviderTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"flipCoin()"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"flipCoin()"},{"p":"org.testframe.engine","c":"TestResult","l":"getInformation()"},{"p":"org.testframe.engine","c":"TestResult","l":"getProcedure()"},{"p":"org.testframe.engine","c":"TestResult","l":"getStatus()"},{"p":"org.testframe.api.random","c":"ExternalRandomnessProvider","l":"giveNumbers(int, int, int)","u":"giveNumbers(int,int,int)"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProvider","l":"giveNumbers(int, int, int)","u":"giveNumbers(int,int,int)"},{"p":"org.testframe.engine","c":"TestResult","l":"hasStackTrace()"},{"p":"org.testframe.api.random","c":"ExternalRandomnessProvider","l":"haveNotExceededQuota()"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProvider","l":"haveNotExceededQuota()"},{"p":"org.testframe.api.random","c":"CoinSide","l":"HEADS"},{"p":"org.testframe.api.text","c":"HTMLElement","l":"HTMLElement()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.text","c":"HTMLElementTest","l":"HTMLElementTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.text","c":"HTMLProcessor","l":"HTMLProcessor()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.text","c":"HTMLProcessorTest","l":"HTMLProcessorTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultCheck","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestResultComparatorCheck","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestResultStatusCheck","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestRunner","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestRunnerCheck","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestRunnerCommandLineOptionsCheck","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"MoreToyTests()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"nextASCIIChar()"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextASCIIChar()"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"nextASCIICharSeq(int)"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextASCIICharSeq(int)"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"nextASCIICharSeq(int, int)","u":"nextASCIICharSeq(int,int)"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextASCIICharSeq(int, int)","u":"nextASCIICharSeq(int,int)"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"nextDateTime()"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextInt()"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextInt(int)"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextObject(E[])"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextObject(List<E>)","u":"nextObject(java.util.List)"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextObject(Set<E>)","u":"nextObject(java.util.Set)"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"nextPowerOfTwo()"},{"p":"org.testframe.api.random","c":"ExpandedRandom","l":"nextString()"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"PASSED"},{"p":"org.testframe.api.text","c":"HTMLElementTest","l":"placeholder()"},{"p":"org.testframe.api.text","c":"HTMLProcessorTest","l":"placeholder()"},{"p":"org.testframe.api.text","c":"PlainTextProcessor","l":"PlainTextProcessor()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"PlainTextProcessorTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"Pseudorandom","l":"Pseudorandom()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"PseudorandomnessTest","l":"PseudorandomnessTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"PseudorandomTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"RandomDotOrgAccessTest()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"Randomness","l":"Randomness()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultsReporter","l":"report()"},{"p":"org.testframe.engine","c":"TestRunner","l":"run(String)","u":"run(java.lang.String)"},{"p":"org.testframe.engine","c":"ToyTests","l":"setUp()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"setUpAlpha()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"setUpBeta()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"setUpClass()"},{"p":"org.testframe.engine","c":"ToyTests","l":"setUpClass()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"setUpClassAlpha()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"setUpClassBeta()"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"SKIPPED"},{"p":"org.testframe.api.random","c":"CoinSide","l":"TAILS"},{"p":"org.testframe.engine","c":"ToyTests","l":"tearDown()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"tearDownAlpha()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"tearDownBeta()"},{"p":"org.testframe.engine","c":"ToyTests","l":"tearDownClass()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"tearDownClassAlpha()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"tearDownClassBeta()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertAboveMaximumDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertAboveMaximumDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertArrayContainsSameButDoesNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumComparable()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumComparableDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumLong()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertBelowMinimumLongDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertContains()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertContainsButDoesNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertContainsButDoesNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertContainsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertContainsSame()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferent()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentButIsSame()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentButIsSameDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentByMoreThanDefaultVarianceDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentByMoreThanDefaultVarianceDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDoubleButIsWithinDefaultVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDoubleButIsWithinDefVarDefMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDoubleButIsWithinVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDoubleButIsWithinVarianceDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentObjectButIsSame()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDifferentObjectButIsSameDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrow()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrowButDoes()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrowButDoesDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrowDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrowSavesThrown()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertDoesNotThrowSavesThrownDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEquals()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayDoubleDefaultVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayDoubleDefaultVarianceDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayInt()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsArrayIntDefaultMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsButIsNotArrayDoubleDiffLengths()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsButIsNotArrayDoubleDiffLengthsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsButIsNotArrayDoubleDiffLengthsDefVar()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsButIsNotArrayDoubleDiffLengthsDefVarDefMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDoubleCloseEnough()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDoubleDefaultVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDoubleDefaultVarianceDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsDoubleJustAtVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsLong()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsNoExceptionForNullActual()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObject()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArray()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArrayButLengthsDiffer()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArrayButLengthsDifferDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArrayDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArraysSameLenDiffOrderDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertEqualsObjectArraysSameLengthDiffOrder()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContains()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsButDoesNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsButDoesNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsSame()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsSameButDoesNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsSameButDoesNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertListContainsSameDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximum()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumButItGoesOver()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumButItGoesOverDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumComparable()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumComparableButItIsMore()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumComparableButItIsMoreDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumComparableDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMaximumDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimum()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimumComparable()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimumComparableDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimumDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimumDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertMinimumLongDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaN()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsNegativeInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsNegativeInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsPositiveInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNButItIsPositiveInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNaNDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButItIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButItIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButNaNIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButNaNIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButNegativeZeroIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButNegativeZeroIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButPositiveInfinityIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButPositiveInfinityIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButPositiveZeroIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeButPositiveZeroIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeDoubleButItIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeDoubleButItIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsIndeedNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsIndeedNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeInfinityIsNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeZeroIsNotActuallyNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeZeroIsNotActuallyNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeZeroIsNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNegativeZeroIsNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsArrayIntDiffLengths()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsArrayIntDiffLengthsDefaultMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleArraySameLengthDiffNums()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleArraySameLengthDiffNumsDefMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleArraySameLengthDiffNumsDefVar()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleArraySameLengthDiffNumsDefVarDefMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleByMoreThanDefaultVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsDoubleDefaultMessageDefaultVariance()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsInt()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsIntArraySameLengthDiffNums()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsIntArraySameLengthDiffNumsDefaultMsg()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsIntDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsLong()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsLongDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsObject()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotEqualsObjectDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaN()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNButItIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNButItIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNNegativeInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNNegativeInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNPositiveInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNaNPositiveInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButInfinityIsNotNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButNaNIsIndeedNotNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButNaNIsIndeedNotNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButNegativeInfinityIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButNegativeInfinityIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeButPositiveInfinityIsIndeedNotNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativePositiveZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativePositiveZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeWhenDoubleIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeWhenDoubleIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeWhenItIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotNegativeWhenItIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveButItIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveButItIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveButNaNIsIndeedNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveButNaNIsIndeedNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveDoubleButItIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveDoubleButItIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNotPositiveDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNull()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNullButItIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNullButItIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertNullDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNaN()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNaNDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNegativeZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsNegativeZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsPositiveZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsPositiveZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveButItIsZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveDouble()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveDoubleButItIsNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveDoubleButItIsNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveDoubleDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveInfinityIsNotPositiveButItIs()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveInfinityIsNotPositiveButItIsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveInfinityIsPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveInfinityIsPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveZeroIsNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertPositiveZeroIsNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertSetContains()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertSetContainsButDoesNot()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertSetContainsButDoesNotDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertSetContainsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrows()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsButDoesNotThrowAny()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsButDoesNotThrowAnyDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsButThrowsWrongType()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsButThrowsWrongTypeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsSavesWrongExceptionThrown()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertThrowsSavesWrongExceptionThrownDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroButItIsNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroButItIsNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroButItIsPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroButItIsPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNaN()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNaNDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNegative()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNegativeDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNegativeInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsNegativeInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsPositiveInfinity()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroDoubleButItIsPositiveInfinityDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroIsNotPositive()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroIsNotPositiveDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroNegativeZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroNegativeZeroDefaultMessage()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroPositiveZero()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testAssertZeroPositiveZeroDefaultMessage()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"testCollapseSpacesAndTabs()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"testCollapseWhitespace()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"testCollapseWhitespaceSimplyReturnsEmptyStringParam()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testDifferentObject()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testDifferentObjectDefaultMessage()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testDiffLength()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testDistinctness()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"testDoesNotEqualWithWhitespaceCollapsed()"},{"p":"org.testframe.api.text","c":"PlainTextProcessorTest","l":"testEqualsWithWhitespaceCollapsed()"},{"p":"org.testframe.api","c":"AssertersTest","l":"testFail()"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProviderTest","l":"testFallbackTriesPrimaryFirst()"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProviderTest","l":"testFallbackUsesFallbackIfPrimaryUnavailable()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testFlipCoin()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testGiveNumbersRejectsBadMaximum()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testGiveNumbersRejectsBadMinimum()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testGiveNumbersRejectsExcessiveAmount()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testGiveNumbersRejectsMinimumHigherThanMaximum()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testGiveNumbersRejectsNegativeAmount()"},{"p":"org.testframe.api.random","c":"FallbackRandomnessProviderTest","l":"testHaveNotExceededQuota()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testIntervals()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testLength()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextASCIIChar()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextASCIICharGivesASCIICharacter()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextASCIICharSeq()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextASCIICharSeqOneParamGivesRightLength()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextIntPositiveBound()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObject()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObjectFromEmptyArrayThrowsException()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObjectFromEmptyListThrowsException()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObjectFromEmptySetThrowsException()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObjectFromList()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextObjectFromSet()"},{"p":"org.testframe.api.random","c":"PseudorandomTest","l":"testNextPowerOfTwo()"},{"p":"org.testframe.api.random","c":"RandomDotOrgAccessTest","l":"testRange()"},{"p":"org.testframe.engine","c":"TestResult","l":"TestResult(Method, TestResultStatus, Throwable)","u":"%3Cinit%3E(java.lang.reflect.Method,org.testframe.engine.TestResultStatus,java.lang.Throwable)"},{"p":"org.testframe.engine","c":"TestResultCheck","l":"TestResultCheck()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultComparator","l":"TestResultComparator()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultComparatorCheck","l":"TestResultComparatorCheck()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultsReporter","l":"TestResultsReporter(String, List<TestResult>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"org.testframe.engine","c":"TestResultStatusCheck","l":"TestResultStatusCheck()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestRunner","l":"TestRunner()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestRunnerCheck","l":"TestRunnerCheck()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestRunnerCommandLineOptionsCheck","l":"TestRunnerCommandLineOptionsCheck()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"ToyTests","l":"testThatShouldBeSkipped()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldBeSkippedA()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldBeSkippedB()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldBeSkippedC()"},{"p":"org.testframe.engine","c":"ToyTests","l":"testThatShouldCauseError()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldCauseErrorA()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldCauseErrorB()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldCauseErrorC()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"testThatShouldFail()"},{"p":"org.testframe.engine","c":"ToyTests","l":"testThatShouldFail()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldFailA()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldFailB()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldFailC()"},{"p":"org.testframe.engine","c":"MoreToyTests","l":"testThatShouldPass()"},{"p":"org.testframe.engine","c":"ToyTests","l":"testThatShouldPass()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldPassA()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldPassB()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"testThatShouldPassC()"},{"p":"org.testframe.engine","c":"ToyTests","l":"ToyTests()","u":"%3Cinit%3E()"},{"p":"org.testframe.api.random","c":"CoinSide","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.testframe.api.random","c":"CoinSide","l":"values()"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"values()"},{"p":"org.testframe.engine","c":"YetMoreToyTests","l":"YetMoreToyTests()","u":"%3Cinit%3E()"}];updateSearchResults();