memberSearchIndex = [{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, E[])","u":"assertContains(E,E[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, E[], String)","u":"assertContains(E,E[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, List<E>)","u":"assertContains(E,java.util.List)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, List<E>, String)","u":"assertContains(E,java.util.List,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, Set<E>)","u":"assertContains(E,java.util.Set)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContains(E, Set<E>, String)","u":"assertContains(E,java.util.Set,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(E[], E[])","u":"assertContainsSame(E[],E[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(E[], E[], String)","u":"assertContainsSame(E[],E[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(List<E>, List<E>)","u":"assertContainsSame(java.util.List,java.util.List)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(List<E>, List<E>, String)","u":"assertContainsSame(java.util.List,java.util.List,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(Set<E>, Set<E>)","u":"assertContainsSame(java.util.Set,java.util.Set)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSame(Set<E>, Set<E>, String)","u":"assertContainsSame(java.util.Set,java.util.Set,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSameOrder(List<E>, List<E>)","u":"assertContainsSameOrder(java.util.List,java.util.List)"},{"p":"org.testframe.api","c":"Asserters","l":"assertContainsSameOrder(List<E>, List<E>, String)","u":"assertContainsSameOrder(java.util.List,java.util.List,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double)","u":"assertDifferent(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, double)","u":"assertDifferent(double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, double, String)","u":"assertDifferent(double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double, double, String)","u":"assertDifferent(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double[], double[])","u":"assertDifferent(double[],double[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double[], double[], double)","u":"assertDifferent(double[],double[],double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double[], double[], double, String)","u":"assertDifferent(double[],double[],double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(double[], double[], String)","u":"assertDifferent(double[],double[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(E[], E[])","u":"assertDifferent(E[],E[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(E[], E[], String)","u":"assertDifferent(E[],E[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(int[], int[])","u":"assertDifferent(int[],int[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(int[], int[], String)","u":"assertDifferent(int[],int[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(long, long)","u":"assertDifferent(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(long, long, String)","u":"assertDifferent(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(Object, Object)","u":"assertDifferent(java.lang.Object,java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDifferent(Object, Object, String)","u":"assertDifferent(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDoesNotThrow(Procedure)","u":"assertDoesNotThrow(org.testframe.api.Procedure)"},{"p":"org.testframe.api","c":"Asserters","l":"assertDoesNotThrow(Procedure, String)","u":"assertDoesNotThrow(org.testframe.api.Procedure,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double)","u":"assertEquals(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, double)","u":"assertEquals(double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, double, String)","u":"assertEquals(double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double, double, String)","u":"assertEquals(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[])","u":"assertEquals(double[],double[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], double)","u":"assertEquals(double[],double[],double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], double, String)","u":"assertEquals(double[],double[],double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(double[], double[], String)","u":"assertEquals(double[],double[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int, int)","u":"assertEquals(int,int)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int, int, String)","u":"assertEquals(int,int,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int[], int[])","u":"assertEquals(int[],int[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(int[], int[], String)","u":"assertEquals(int[],int[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(long, long)","u":"assertEquals(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(long, long, String)","u":"assertEquals(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object, Object)","u":"assertEquals(java.lang.Object,java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object, Object, String)","u":"assertEquals(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object[], Object[])","u":"assertEquals(java.lang.Object[],java.lang.Object[])"},{"p":"org.testframe.api","c":"Asserters","l":"assertEquals(Object[], Object[], String)","u":"assertEquals(java.lang.Object[],java.lang.Object[],java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(double, double, double)","u":"assertInRange(double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(double, double, double, double)","u":"assertInRange(double,double,double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(double, double, double, double, String)","u":"assertInRange(double,double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(double, double, double, String)","u":"assertInRange(double,double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(long, long, long)","u":"assertInRange(long,long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(long, long, long, String)","u":"assertInRange(long,long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(T, T, T)","u":"assertInRange(T,T,T)"},{"p":"org.testframe.api","c":"Asserters","l":"assertInRange(T, T, T, String)","u":"assertInRange(T,T,T,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(double, double)","u":"assertMaximum(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(double, double, String)","u":"assertMaximum(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(long, long)","u":"assertMaximum(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(long, long, String)","u":"assertMaximum(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(T, T)","u":"assertMaximum(T,T)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMaximum(T, T, String)","u":"assertMaximum(T,T,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(double, double)","u":"assertMinimum(double,double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(double, double, String)","u":"assertMinimum(double,double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(long, long)","u":"assertMinimum(long,long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(long, long, String)","u":"assertMinimum(long,long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(T, T)","u":"assertMinimum(T,T)"},{"p":"org.testframe.api","c":"Asserters","l":"assertMinimum(T, T, String)","u":"assertMinimum(T,T,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNaN(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNaN(double, String)","u":"assertNaN(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(double, String)","u":"assertNegative(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNegative(long, String)","u":"assertNegative(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNaN(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNaN(double, String)","u":"assertNotNaN(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(double, String)","u":"assertNotNegative(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotNegative(long, String)","u":"assertNotNegative(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(double, String)","u":"assertNotPositive(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNotPositive(long, String)","u":"assertNotPositive(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNull(Object)","u":"assertNull(java.lang.Object)"},{"p":"org.testframe.api","c":"Asserters","l":"assertNull(Object, String)","u":"assertNull(java.lang.Object,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(double, String)","u":"assertPositive(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPositive(long, String)","u":"assertPositive(long,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertPrintOut(Predicate<String>, Procedure, String)","u":"assertPrintOut(java.util.function.Predicate,org.testframe.api.Procedure,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertThrows(Procedure, Class<E>)","u":"assertThrows(org.testframe.api.Procedure,java.lang.Class)"},{"p":"org.testframe.api","c":"Asserters","l":"assertThrows(Procedure, Class<E>, String)","u":"assertThrows(org.testframe.api.Procedure,java.lang.Class,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertTimeout(Procedure, Duration, String)","u":"assertTimeout(org.testframe.api.Procedure,java.time.Duration,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(double)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(double, String)","u":"assertZero(double,java.lang.String)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(long)"},{"p":"org.testframe.api","c":"Asserters","l":"assertZero(long, String)","u":"assertZero(long,java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultComparator","l":"compare(TestResult, TestResult)","u":"compare(org.testframe.engine.TestResult,org.testframe.engine.TestResult)"},{"p":"org.testframe.api","c":"Asserters","l":"DEFAULT_TEST_DELTA"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"ERROR"},{"p":"org.testframe.api","c":"Procedure","l":"execute()"},{"p":"org.testframe.api","c":"Asserters","l":"fail(String)","u":"fail(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"FAILED"},{"p":"org.testframe.engine","c":"TestResult","l":"getInformation()"},{"p":"org.testframe.engine","c":"TestResult","l":"getProcedure()"},{"p":"org.testframe.engine","c":"TestResult","l":"getStatus()"},{"p":"org.testframe.engine","c":"TestResult","l":"hasStackTrace()"},{"p":"org.testframe.engine","c":"TestRunner","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"PASSED"},{"p":"org.testframe.engine","c":"TestResultsReporter","l":"report()"},{"p":"org.testframe.engine","c":"TestRunner","l":"run(String)","u":"run(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"SKIPPED"},{"p":"org.testframe.engine","c":"TestResult","l":"TestResult(Method, TestResultStatus, Throwable)","u":"%3Cinit%3E(java.lang.reflect.Method,org.testframe.engine.TestResultStatus,java.lang.Throwable)"},{"p":"org.testframe.engine","c":"TestResultComparator","l":"TestResultComparator()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultsReporter","l":"TestResultsReporter(String, List<TestResult>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"org.testframe.engine","c":"TestRunner","l":"TestRunner()","u":"%3Cinit%3E()"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.testframe.engine","c":"TestResultStatus","l":"values()"}];updateSearchResults();